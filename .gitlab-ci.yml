# SPDX-FileCopyrightText: none
# SPDX-License-Identifier: CC0-1.0

image: python:latest

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  # TODO: at the moment the release package does still contain
  # the kdenlive adapter and we need to use the git version
  - pip install git+https://github.com/AcademySoftwareFoundation/OpenTimelineIO
#  - pip install -V OpenTimelineIO

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - python setup.py bdist_wheel
    - pip install dist/*
  artifacts:
    paths:
      - dist/*.whl

test:
  stage: test
  script:
    - pip install pytest-cov flake8 flake8-junit-report
    - pip install dist/*
    - echo "Running unit tests..."
    - pytest --cov=./ --junitxml=JUnitTestResults.xml
    - echo "Linting code..."
    - flake8 --show-source --statistics --output-file=flake8Output.txt
    - flake8_junit flake8Output.txt JUnitLintResults.xml
  artifacts:
    reports:
      junit: JUnit*Results.xml


deploy-to-gitlab:
  stage: deploy
  when: manual
  environment: development
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-to-test-pypi-org:
  stage: deploy
  when: manual
  environment: production
  script:
    - pip install twine
    - TWINE_PASSWORD=${TESTPYPIORG_TOKEN} TWINE_USERNAME=${TESTPYPIORG_USERNAME} python -m twine upload --repository testpypi dist/*
  rules:
    - if: $CI_COMMIT_TAG

deploy-to-pypi-org:
  stage: deploy
  when: manual
  environment: production
  script:
    - pip install build twine
    - TWINE_PASSWORD=${PYPIORG_TOKEN} TWINE_USERNAME=${PYPIORG_USERNAME} python -m twine upload --repository pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG
